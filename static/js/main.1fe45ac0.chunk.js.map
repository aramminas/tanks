{"version":3,"sources":["store/constants.js","store/reducers/mapsReducer.js","store/reducers/tanksReducer.js","store/reducers/gameStateReducer.js","store/reducers/gameInfoReducer.js","store/index.js","components/header/Header.js","store/actions/gameStateAction.js","store/actions/gameInfoAction.js","constants.js","components/menu/Property.js","store/actions/mapsAction.js","store/actions/tanksAction.js","components/menu/Menu.js","components/game/GameInfo.js","components/game/WinLose.js","components/game/Canvas.js","components/game/GameArea.js","components/main/Main.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["GAME_MAP","GAME_TANKS","CHANGE_GAME_STATE","CHANGE_GAME_INFO","initState","mapsReducer","state","type","payload","tanksReducer","gameStateReducer","life","enemy","x","y","height","width","pos","eX","undefined","eY","eHeight","eWidth","ePos","gameInfoReducer","AllReducers","combineReducers","mapsData","mapsReducers","tanksData","tanksReducers","gameStateData","gameStateReducers","gameInfoData","store","createStore","compose","composeWithDevTools","applyMiddleware","Header","starsJSX","Array","apply","length","map","el","i","className","set_game_state","data","change_game_info_data","maps","id","name","path","tanks","sound","music","defMapsData","defTanksData","greetingMusic","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","soundIcon","textAlign","display","connect","dispatch","setMapData","set_map_data","setTankData","set_tank_data","changeGameState","changeGameInfo","props","classes","useState","audio","setAudio","setMap","tank","setTank","image","setMusic","playPauseMusic","action","pause","currentTime","play","newAudio","Audio","handleChange","event","target","value","changeMap","filter","item","changeTank","src","alt","FormControl","variant","InputLabel","htmlFor","Select","native","onChange","label","inputProps","aria-label","onClick","Button","color","infoData","Menu","GameInfo","max","style","WinLose","win","types","battlefield","player","explosion","enemyTank","enemyExplosion","Canvas","xCoordinate","yCoordinate","xBulletCoordinate","yBulletCoordinate","xExplosionCoordinate","yExplosionCoordinate","xEnemyCoordinate","yEnemyCoordinate","xEnemyExplosionCoordinate","yEnemyExplosionCoordinate","xEnemyBulletCoordinate","yEnemyBulletCoordinate","destroyed","damage","gameResult","restProps","tankHeight","game","tankWidth","gunDirection","shot","bulletHeight","bulletWidth","gunBulletDirection","bulletBox","engine","enemyGunDirection","Math","round","random","enemyHeight","enemyWidth","hit","shotEnemy","enemyGunBulletDirection","enemyBulletHeight","enemyBulletWidth","enemyBulletBox","canvasRef","useRef","draw","ctx","clearRect","canvas","floor","createImage","moveBullet","moveEnemy","checkHit","automaticShot","moveEnemyBullet","checkPlayerHit","sizeHeight","sizeWidth","Image","onload","img","drawImage","escFunction","useCallback","preventDefault","keyCode","push","shotSound","setTimeout","engineSound","pop","turn","soundTankExplosion","useEffect","animationFrameId","context","current","getContext","main","render","window","requestAnimationFrame","document","addEventListener","cancelAnimationFrame","removeEventListener","ref","finish","setFinish","setWin","useSelector","DATA","Main","gameMode","Footer","year","Date","getFullYear","linksJSX","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1fe45ac0.chunk.js","sourcesContent":["/* Main */\nexport const GAME_MAP = 'GAME_MAP';\nexport const GAME_TANKS = 'GAME_TANKS';\nexport const CHANGE_GAME_STATE = 'CHANGE_GAME_STATE';\nexport const CHANGE_GAME_INFO = 'CHANGE_GAME_INFO';\n\n\n","import {GAME_MAP} from '../constants';\n\nconst initState = \"primary.png\";\n\nconst mapsReducer = (state= initState,{type,payload}) => {\n    switch (type) {\n        case GAME_MAP:\n            return payload;\n        default:\n            return state;\n    }\n}\n\nexport default mapsReducer;","import {GAME_TANKS} from '../constants';\n\nconst initState = \"abrams.png\";\n\nconst tanksReducer = (state= initState,{type,payload}) => {\n    switch (type) {\n        case GAME_TANKS:\n            return payload;\n        default:\n            return state;\n    }\n}\n\nexport default tanksReducer;","import {CHANGE_GAME_STATE} from '../constants';\n\nconst initState = {\n    state: 0,\n};\n\nconst gameStateReducer = (state= initState,{type,payload}) => {\n    switch (type) {\n        case CHANGE_GAME_STATE:\n            return {...state, state: payload};\n        default:\n            return state;\n    }\n}\n\nexport default gameStateReducer;","import {CHANGE_GAME_INFO} from '../constants';\n\nconst initState = {\n    life: 100,\n    enemy: 10,\n    x: 50,\n    y: 600,\n    height: 53,\n    width: 140,\n    pos: \"p-0-\",\n    eX: undefined,\n    eY: undefined,\n    eHeight: undefined,\n    eWidth: undefined,\n    ePos: undefined,\n};\n\nconst gameInfoReducer = (state= initState,{type,payload}) => {\n    switch (type) {\n        case CHANGE_GAME_INFO:\n            return {...state, ...payload};\n        default:\n            return state;\n    }\n}\n\nexport default gameInfoReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\n/* Reducers */\nimport mapsReducers from \"./reducers/mapsReducer\";\nimport tanksReducers from \"./reducers/tanksReducer\";\nimport gameStateReducers from \"./reducers/gameStateReducer\";\nimport gameInfoReducer from \"./reducers/gameInfoReducer\";\n\nconst AllReducers = combineReducers({\n    mapsData: mapsReducers,\n    tanksData: tanksReducers,\n    gameStateData: gameStateReducers,\n    gameInfoData: gameInfoReducer,\n})\n\nconst InitialState = {}\nconst middleware = [\n    // thunk,\n]\n\nconst store = createStore(\n    AllReducers,\n    InitialState,\n    compose(composeWithDevTools(applyMiddleware(...middleware)))\n)\n\nexport default store","import './Header.scss';\n\nfunction Header() {\n    const starsJSX = Array.apply(null, {length: 5})\n        .map((el, i) => <span key={i}>&#9733;</span>);\n\n    return (\n        <header className=\"header\">\n            <h2 className={\"main-star\"}><span>&#9885;</span></h2>\n            <h1>\n                <span>&#9886;</span>\n                Battle of tanks\n                <span>&#9887;</span>\n            </h1>\n            <h2>{starsJSX}</h2>\n        </header>\n    );\n}\n\nexport default Header;","import {CHANGE_GAME_STATE} from '../constants';\n\nexport const set_game_state = (data) => {\n    return {\n        type: CHANGE_GAME_STATE, payload : data\n    }\n};","import {CHANGE_GAME_INFO} from '../constants';\n\nexport const change_game_info_data = (data) => {\n    return {\n        type: CHANGE_GAME_INFO, payload : data\n    }\n};","const data = {\n    // maps data\n    maps: [\n        {\n            id: 1,\n            name: \"Primary\",\n            path: \"primary.png\"\n        },\n        {\n            id: 2,\n            name: \"Afghanistan\",\n            path: \"afghanistan.png\"\n        },\n        {\n            id: 3,\n            name: \"Airport\",\n            path: \"airport.jpg\"\n        },\n        {\n            id: 4,\n            name: \"Columbia\",\n            path: \"columbia.jpg\"\n        },\n        {\n            id: 5,\n            name: \"Computer Sees\",\n            path: \"computer-sees.jpg\"\n        },\n        {\n            id: 6,\n            name: \"Myxedema\",\n            path: \"myxedema.png\"\n        },\n        {\n            id: 7,\n            name: \"Rivers\",\n            path: \"rivers.png\"\n        },\n        {\n            id: 8,\n            name: \"Routs\",\n            path: \"routs.jpg\"\n        },\n        {\n            id: 9,\n            name: \"Saratoga\",\n            path: \"saratoga.jpg\"\n        },\n    ],\n    // tanks data\n    tanks: [\n        {\n            id: 1,\n            name: \"Abrams\",\n            path: \"abrams.png\"\n        },\n        {\n            id: 2,\n            name: \"Fafnir\",\n            path: \"fafnir.png\"\n        },\n        {\n            id: 3,\n            name: \"Merkava\",\n            path: \"merkava.png\"\n        },\n        {\n            id: 4,\n            name: \"T 72\",\n            path: \"t72.png\"\n        },\n        {\n            id: 5,\n            name: \"Tiger\",\n            path: \"tiger.png\"\n        },\n        {\n            id: 6,\n            name: \"Widower\",\n            path: \"widower.png\"\n        }\n    ],\n    /* default music */\n    sound: {\n        music: \"./audio/bgm.wav\",\n    },\n}\n\nexport default data","import React, {useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {set_map_data} from \"../../store/actions/mapsAction\";\nimport {set_tank_data} from \"../../store/actions/tanksAction\";\nimport {set_game_state} from \"../../store/actions/gameStateAction\";\nimport {change_game_info_data} from \"../../store/actions/gameInfoAction\";\nimport {connect} from \"react-redux\";\nimport data from '../../constants';\n\nconst defMapsData = data.maps;\nconst defTanksData = data.tanks;\nconst greetingMusic  = data.sound.music;\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width: '80%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    soundIcon: {\n        textAlign: 'right',\n        '& input': {\n            width: 35,\n            display: \"inline-block\",\n        },\n    }\n}));\n\nfunction Property(props) {\n    const classes = useStyles();\n    const [audio, setAudio] = useState(null);\n    const [map, setMap] = useState({...defMapsData[0]});\n    const [tank, setTank] = useState({...defTanksData[0]});\n    const [music, setMusic] = useState({sound:false, image: \"speaker_delete.png\"});\n\n    const playPauseMusic = (action = \"\") => {\n        if(music.sound || action === \"mute\"){\n            if(audio){\n                audio.pause();\n                audio.currentTime = 0;\n            }\n            setMusic(() => {\n                return {sound: false, image: \"speaker_delete.png\"};\n            });\n            setAudio(null);\n        }else {\n            if(!audio){\n                setAudio(() => {\n                    const newAudio = new Audio(greetingMusic);\n                    newAudio.play();\n                    return newAudio;\n                });\n            }else {\n                audio.play();\n            }\n            setMusic(()=>{\n                return {sound:true, image: \"speaker_accept.png\"};\n            });\n        }\n    }\n\n    const handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        if(name === \"map\"){\n            const changeMap = defMapsData.filter(item => item.id === +value)[0];\n            setMap({...changeMap});\n            props.setMapData(changeMap.path);\n        }else if(name === \"tank\"){\n            const changeTank = defTanksData.filter(item => item.id === +value)[0];\n            setTank({...changeTank});\n            props.setTankData(changeTank.path);\n        }\n    };\n\n    const startGame = () => {\n        playPauseMusic(\"mute\");\n        props.changeGameState(1);\n        props.changeGameInfo({\n            ...props.infoData,\n            life: 100,\n            enemy: 10,\n        });\n    }\n\n    return (\n        <section className={\"property\"}>\n            <h3 className={\"title\"}> - Select a map and a tank to start the battle - </h3>\n            <div>\n                <div className={\"map-section\"}>\n                    <figure>\n                        <img src={`./images/maps/${map.path}`} alt=\"map\"/>\n                    </figure>\n                    <div>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel htmlFor=\"outlined-map\">Maps</InputLabel>\n                            <Select\n                                native\n                                value={map.id}\n                                onChange={handleChange}\n                                label=\"Maps\"\n                                inputProps={{\n                                    name: 'map',\n                                    id: 'outlined-map',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                {\n                                    defMapsData.map(item => (\n                                        <option key={item.id} value={item.id}>{item.name}</option>\n                                    ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n                <div className={\"tank-section\"}>\n                    <h3 className={\"title tank-title\"}> - Select a tank - </h3>\n                    <figure className={\"tank-image\"}>\n                        <img src={`./images/tanks/${tank.path}`} alt=\"tank\"/>\n                    </figure>\n                    <div>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel htmlFor=\"outlined-tank\">Tanks</InputLabel>\n                            <Select\n                                native\n                                value={tank.id}\n                                onChange={handleChange}\n                                label=\"Tanks\"\n                                inputProps={{\n                                    name: 'tank',\n                                    id: 'outlined-tank',\n                                }}\n                            >\n                                <option aria-label=\"None\" value=\"\" />\n                                {\n                                    defTanksData.map(item => (\n                                        <option key={item.id} value={item.id}>{item.name}</option>\n                                    ))\n                                }\n                            </Select>\n                        </FormControl>\n                    </div>\n                </div>\n                <div className={\"instruction-section\"}>\n                    <h3 className={\"title instruction-title\"}> - Instruction - </h3>\n                    <div className={\"instruction-content\"}>\n                        <h4>Movement buttons</h4>\n                        <div className={\"movement\"}>\n                            <p>Move left <span className={\"left\"}>&#10156;</span></p>\n                            <p>Move right <span>&#10156;</span></p>\n                            <p>Move up <span className={\"up\"}>&#10155;</span></p>\n                            <p>Move down <span className={\"down\"}>&#10155;</span></p>\n                        </div>\n                        <h4>Fire buttons</h4>\n                        <div className={\"fire\"}>\n                            <p>Space <span className={\"space\"}>&#10073;</span></p>\n                        </div>\n                        <div className={classes.soundIcon}>\n                            <input type=\"image\" onClick={() => playPauseMusic()}\n                                   src={`./images/others/${music.sound ? \"speaker_delete.png\" : \"speaker_accept.png\"}`}  alt=\"sound\"/>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"btn-start\"}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => startGame()}>\n                        Start\n                    </Button>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMapData: (data) => {dispatch(set_map_data(data))},\n        setTankData: (data) => {dispatch(set_tank_data(data))},\n        changeGameState: (data) => {dispatch(set_game_state(data))},\n        changeGameInfo: (data) => {dispatch(change_game_info_data(data))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Property);","import {GAME_MAP} from '../constants';\n\nexport const set_map_data = (data) => {\n    return {\n        type: GAME_MAP, payload : data\n    }\n};","import {GAME_TANKS} from '../constants';\n\nexport const set_tank_data = (data) => {\n    return {\n        type: GAME_TANKS, payload : data\n    }\n};","import Property from \"./Property\";\nimport \"./Menu.scss\";\n\nfunction Menu(props) {\n    return (\n        <main className={\"main-menu container\"}>\n            <Property infoData={props.infoData}/>\n        </main>\n    );\n}\n\nexport default Menu;","import React from \"react\";\n\nfunction GameInfo(props) {\n    const {life, enemy} = props.data;\n\n    return (\n        <div className={\"game-info\"}>\n            <div>\n                <p className={\"game-info-title\"}>\n                    Streak of life\n                </p>\n                <div>\n                    <progress max=\"100\" value={life} className=\"life\">\n                        <div className=\"progress-bar\">\n                            <span style={{width: `${life}%`}}>{life}%</span>\n                        </div>\n                    </progress>\n                </div>\n            </div>\n            <div>\n                <p className={\"game-info-title enemy\"}>\n                    Enemy number\n                </p>\n                <p className={\"enemy-count\"}>\n                    {enemy}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default GameInfo;","const defaultEnemyCount = 10;\n\nfunction WinLose(props) {\n    const {win, data} = props;\n\n    return (\n        <div className={\"win-lose\"}>\n            {win ?\n                <div className={\"win-lose-image\"}>\n                    <img src=\"./images/others/you-win.jpg\" alt=\"win\"/>\n                </div> :\n                <div className={\"win-lose-image\"}>\n                    <img src=\"./images/others/you-lose.png\" alt=\"lose\"/>\n                </div>\n            }\n            <div className={\"win-lose-result\"}>\n                <h2>Game results</h2>\n                <div><b>Player health:</b> {data.life}.</div>\n                <div><b>Destroyed tanks:</b> {defaultEnemyCount - data.enemy}.</div>\n                <div><b>Tanks left:</b> {data.enemy}.</div>\n            </div>\n        </div>\n    );\n}\n\nexport default WinLose;","import React, { useRef, useEffect, useCallback} from 'react';\n\nconst types = {\n    tank: \"tank\",\n    map: \"map\",\n    ammunition: \"ammunition\",\n    explosion: \"explosion\",\n    enemy: \"enemy\",\n    enemy_explosion: \"enemy_explosion\",\n    enemy_ammunition: \"enemy_ammunition\",\n};\n\nlet battlefield = {\n    player: \"ammunition-1.png\",\n    enemy: \"ammunition-2.png\",\n    explosion: \"explosion.png\",\n    enemyTank: \"widower.png\",\n    enemyExplosion: \"tank-explosion.png\",\n};\n\nfunction Canvas(props) {\n    const {destroyed, damage, gameResult, ...restProps} = props;\n\n    /* coordinates of pictures */\n    let xCoordinate;\n    let yCoordinate;\n    /* tank dimensions */\n    let tankHeight = props.game.height;\n    let tankWidth = props.game.width;\n    /* tank movement speed */\n    let speed = 8;\n    /* tank gun direction */\n    let gunDirection = props.game.pos;\n    /* tank shot */\n    let shot = false;\n    let xBulletCoordinate;\n    let yBulletCoordinate;\n    let bulletHeight = 10;\n    let bulletWidth = 50;\n    let gunBulletDirection = \"\";\n    let disadvantage = 2;\n    let bulletSpeed = 5;\n    let bulletBox = [];\n    /* explosion */\n    let explosion = false;\n    let xExplosionCoordinate;\n    let yExplosionCoordinate;\n    let explosionHeight = 50;\n    let explosionWidth = 50;\n    /* enemy */\n    let engine = false;\n    let enemyGunDirection = props.game.ePos || [\"p-0-\", \"p-1-\", \"p-2-\", \"p-3-\"][Math.round(Math.random()*3)];\n    let xEnemyCoordinate;\n    let yEnemyCoordinate;\n    let enemyHeight = props.game.eHeight || 70;\n    let enemyWidth = props.game.eWidth || 130;\n    /* hit */\n    let hit = false;\n    let xEnemyExplosionCoordinate;\n    let yEnemyExplosionCoordinate;\n    let enemyExplosionHeight = 110;\n    let enemyExplosionWidth = 110;\n    /* enemy shot */\n    let shotEnemy = false;\n    let xEnemyBulletCoordinate;\n    let yEnemyBulletCoordinate;\n    let enemyGunBulletDirection = \"\";\n    let enemyBulletHeight = 10;\n    let enemyBulletWidth = 50;\n    let enemyBulletBox = [];\n\n    /* create the main canvas */\n    const canvasRef = useRef(null);\n\n    /* Part for drawing our objects on canvas */\n    const draw = (ctx, data) => {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        xCoordinate = xCoordinate ? xCoordinate : props.game.x;\n        yCoordinate = yCoordinate ? yCoordinate : props.game.y;\n        /* enemy*/\n        xEnemyCoordinate = xEnemyCoordinate ? xEnemyCoordinate\n            : Math.floor(Math.random() * ((ctx.canvas.width - enemyWidth) - enemyWidth) + enemyWidth);\n        yEnemyCoordinate = yEnemyCoordinate ? yEnemyCoordinate\n            : Math.floor(Math.random() * ((ctx.canvas.height - enemyHeight) - enemyHeight) + enemyHeight);\n\n        /* main map */\n        createImage(ctx, types.map, data.map, 0, 0);\n\n        /* player tank */\n        createImage(ctx, types.tank, data.tank, xCoordinate, yCoordinate);\n\n        /* bullet player */\n        if(shot){\n            createImage(ctx, types.ammunition, data.player, xBulletCoordinate, yBulletCoordinate);\n        }\n\n        /* giving bullet movement */\n        if(bulletBox.length === 1){\n            moveBullet(ctx.canvas.width, ctx.canvas.height);\n        }\n\n        /* fire on shot */\n        if(explosion){\n            createImage(ctx, types.explosion, data.explosion, xExplosionCoordinate, yExplosionCoordinate);\n        }\n\n        /* enemy tank */\n        if(props.game.life > 0 && props.game.enemy > 0){\n            if(!hit){\n                moveEnemy(ctx.canvas.height, ctx.canvas.width);\n                checkHit();\n                createImage(ctx, types.enemy, data.enemyTank, xEnemyCoordinate, yEnemyCoordinate);\n                if(enemyBulletBox.length === 0) {\n                    automaticShot();\n                    shotEnemy = true;\n                }\n            }\n            if(enemyBulletBox.length === 1){\n                moveEnemyBullet(ctx.canvas.width, ctx.canvas.height);\n                checkPlayerHit();\n            }\n        }\n\n        /* enemy explosion */\n        if(hit){\n            xEnemyExplosionCoordinate = xEnemyCoordinate;\n            yEnemyExplosionCoordinate = yEnemyCoordinate;\n            createImage(ctx, types.enemy_explosion, data.enemyExplosion, xEnemyExplosionCoordinate, yEnemyExplosionCoordinate);\n        }\n\n        /* bullet enemy */\n        if(shotEnemy){\n            createImage(ctx, types.enemy_ammunition, data.enemy, xEnemyBulletCoordinate, yEnemyBulletCoordinate);\n        }\n    }\n\n    /* part for adding images */\n    const createImage = (ctx, type = \"\", path = \"\", x, y) => {\n        let sizeHeight;\n        let sizeWidth;\n        const image = new Image();\n        if(type === types.tank){\n            image.src = `./images/tanks/${gunDirection}${path}`;\n            sizeHeight = tankHeight;\n            sizeWidth = tankWidth;\n        }else if(type === types.map){\n            image.src = `./images/maps/${path}`;\n            sizeHeight = ctx.canvas.height;\n            sizeWidth = ctx.canvas.width;\n        }else if(type === types.ammunition){\n            image.src = `./images/ammunition/${gunDirection}${path}`;\n            sizeHeight = bulletHeight;\n            sizeWidth = bulletWidth;\n        }else if(type === types.explosion){\n            image.src = `./images/ammunition/${path}`;\n            sizeHeight = explosionHeight;\n            sizeWidth = explosionWidth;\n        }else if(type === types.enemy){\n            image.src = `./images/tanks/${enemyGunDirection}${path}`;\n            sizeHeight = enemyHeight;\n            sizeWidth = enemyWidth;\n        }else if(type === types.enemy_explosion){\n            image.src = `./images/ammunition/${path}`;\n            sizeHeight = enemyExplosionHeight;\n            sizeWidth = enemyExplosionWidth;\n        }else if(type === types.enemy_ammunition){\n            image.src = `./images/ammunition/${enemyGunDirection}${path}`;\n            sizeHeight = enemyBulletHeight;\n            sizeWidth = enemyBulletWidth;\n        }\n\n        image.onload = (function (ctx, img) {\n            ctx.drawImage(img, x, y, sizeWidth, sizeHeight);\n        })(ctx, image);\n    }\n\n    const escFunction = useCallback((event) => {\n        event.preventDefault();\n\n        if(event.keyCode === 32) {\n            /* space */\n            /* defining bullet parameters */\n            if(bulletBox.length === 0){\n                shot = true;\n                explosion = true;\n                gunBulletDirection = gunDirection;\n                if(gunDirection === \"p-0-\"){\n                    if(bulletWidth < bulletHeight){\n                        [bulletHeight, bulletWidth] = [bulletWidth, bulletHeight];\n                    }\n                    xBulletCoordinate = xCoordinate + tankWidth;\n                    yBulletCoordinate = yCoordinate + (tankHeight-bulletHeight)/2;\n                    xExplosionCoordinate = xCoordinate + tankWidth;\n                    yExplosionCoordinate = yCoordinate +(tankHeight-explosionHeight)/2;\n                }else if(gunDirection === \"p-1-\"){\n                    if(bulletWidth > bulletHeight){\n                        [bulletHeight, bulletWidth] = [bulletWidth, bulletHeight];\n                    }\n                    xBulletCoordinate = xCoordinate + (tankWidth-bulletWidth+disadvantage)/2;\n                    yBulletCoordinate = yCoordinate + tankHeight;\n                    xExplosionCoordinate = xCoordinate;\n                    yExplosionCoordinate = yCoordinate + tankHeight;\n                }else if(gunDirection === \"p-2-\"){\n                    if(bulletWidth < bulletHeight){\n                        [bulletHeight, bulletWidth] = [bulletWidth, bulletHeight];\n                    }\n                    xBulletCoordinate = xCoordinate - bulletWidth;\n                    yBulletCoordinate = yCoordinate + (tankHeight-bulletHeight)/2;\n                    xExplosionCoordinate = xCoordinate - explosionWidth;\n                    yExplosionCoordinate = yCoordinate;\n                }else if(gunDirection === \"p-3-\"){\n                    if(bulletWidth > bulletHeight){\n                        [bulletHeight, bulletWidth] = [bulletWidth, bulletHeight];\n                    }\n                    xBulletCoordinate = xCoordinate + (tankWidth-bulletWidth-disadvantage)/2;\n                    yBulletCoordinate = yCoordinate - bulletHeight;\n                    xExplosionCoordinate = xCoordinate;\n                    yExplosionCoordinate = yCoordinate - explosionHeight;\n                }\n                bulletBox.push({\n                    x: xBulletCoordinate,\n                    y: yBulletCoordinate,\n                    height: bulletHeight,\n                    width: bulletWidth,\n                });\n\n                shotSound();\n                setTimeout(function () {\n                    explosion = false;\n                },300);\n            }\n        }else if(event.keyCode === 37){\n            /* left */\n            if(xCoordinate >= 4){\n                xCoordinate -= speed;\n            }\n            if(gunDirection !== \"p-2-\"){\n                gunDirection = \"p-2-\";\n                if(tankHeight > tankWidth){\n                    [tankHeight, tankWidth] = [tankWidth, tankHeight];\n                }\n            }\n            if(!engine){\n                engineSound();\n            }\n        }else if(event.keyCode === 38){\n            /* up */\n            if(yCoordinate >= 4){\n                yCoordinate -= speed;\n            }\n            if(gunDirection !== \"p-3-\"){\n                gunDirection = \"p-3-\";\n                if(tankHeight < tankWidth){\n                    [tankHeight, tankWidth] = [tankWidth, tankHeight];\n                }\n            }\n            if(!engine){\n                engineSound();\n            }\n        }else if(event.keyCode === 39){\n            /* right */\n            if(xCoordinate <= props.height - tankWidth + tankHeight){\n                xCoordinate += speed;\n            }\n            if(gunDirection !== \"p-0-\"){\n                gunDirection = \"p-0-\";\n                if(tankHeight > tankWidth){\n                    [tankHeight, tankWidth] = [tankWidth, tankHeight];\n                }\n            }\n            if(!engine){\n                engineSound();\n            }\n        }else if(event.keyCode === 40){\n            /* down */\n            if(yCoordinate <= props.height - tankHeight){\n                yCoordinate += speed;\n            }\n            if(gunDirection !== \"p-1-\"){\n                gunDirection = \"p-1-\";\n                if(tankHeight < tankWidth){\n                    [tankHeight, tankWidth] = [tankWidth, tankHeight];\n                }\n            }\n            if(!engine){\n                engineSound();\n            }\n        }\n    }, [draw]);\n\n    const moveBullet = (width, height) => {\n        if(gunBulletDirection === \"p-0-\"){\n            bulletBox[0].x += bulletSpeed;\n            xBulletCoordinate = bulletBox[0].x;\n            if(xBulletCoordinate > width){\n                bulletBox.pop();\n                shot = false;\n            }\n        }else if(gunBulletDirection === \"p-1-\"){\n            bulletBox[0].y += bulletSpeed;\n            yBulletCoordinate = bulletBox[0].y;\n            if(yBulletCoordinate > height){\n                bulletBox.pop();\n                shot = false;\n            }\n        }else if(gunBulletDirection === \"p-2-\"){\n            bulletBox[0].x -= bulletSpeed;\n            xBulletCoordinate = bulletBox[0].x;\n            if(xBulletCoordinate <= -bulletWidth){\n                bulletBox.pop();\n                shot = false;\n            }\n        }else if(gunBulletDirection === \"p-3-\"){\n            bulletBox[0].y -= bulletSpeed;\n            yBulletCoordinate = bulletBox[0].y;\n            if(yBulletCoordinate < -bulletHeight){\n                bulletBox.pop();\n                shot = false;\n            }\n        }\n    }\n\n    const moveEnemy = (height, width) => {\n        if(enemyGunDirection === \"p-0-\"){\n            if(xEnemyCoordinate < width - enemyWidth){\n                xEnemyCoordinate += 1;\n            } else {\n                const turn = Math.round(Math.random()*2);\n                enemyGunDirection = [\"p-1-\", \"p-2-\", \"p-3-\"][turn];\n            }\n            if(enemyHeight > enemyWidth){\n                [enemyWidth, enemyHeight] = [enemyHeight, enemyWidth];\n            }\n        }else if(enemyGunDirection === \"p-1-\"){\n            if(yEnemyCoordinate < height - enemyHeight){\n                yEnemyCoordinate += 1;\n            } else {\n                const turn = Math.round(Math.random()*2);\n                enemyGunDirection = [\"p-0-\", \"p-2-\", \"p-3-\"][turn];\n            }\n            if(enemyHeight < enemyWidth){\n                [enemyWidth, enemyHeight] = [enemyHeight, enemyWidth];\n            }\n        }else if(enemyGunDirection === \"p-2-\"){\n            if(xEnemyCoordinate > enemyWidth){\n                xEnemyCoordinate -= 1;\n            } else {\n                const turn = Math.round(Math.random()*2);\n                enemyGunDirection = [\"p-0-\", \"p-1-\", \"p-3-\"][turn];\n            }\n            if(enemyHeight > enemyWidth){\n                [enemyWidth, enemyHeight] = [enemyHeight, enemyWidth];\n            }\n        }else if(enemyGunDirection === \"p-3-\"){\n            if(yEnemyCoordinate > enemyHeight){\n                yEnemyCoordinate -= 1;\n            } else {\n                const turn = Math.round(Math.random()*2);\n                enemyGunDirection = [\"p-0-\", \"p-1-\", \"p-2-\"][turn];\n            }\n            if(enemyHeight < enemyWidth){\n                [enemyWidth, enemyHeight] = [enemyHeight, enemyWidth];\n            }\n        }\n    };\n\n    const moveEnemyBullet = (width, height) => {\n        if(enemyGunBulletDirection === \"p-0-\"){\n            enemyBulletBox[0].x += bulletSpeed;\n            xEnemyBulletCoordinate = enemyBulletBox[0].x;\n            if(xEnemyBulletCoordinate > width){\n                enemyBulletBox.pop();\n                shotEnemy = false;\n            }\n        }else if(enemyGunBulletDirection === \"p-1-\"){\n            enemyBulletBox[0].y += bulletSpeed;\n            yEnemyBulletCoordinate = enemyBulletBox[0].y;\n            if(yEnemyBulletCoordinate > height){\n                enemyBulletBox.pop();\n                shotEnemy = false;\n            }\n        }else if(enemyGunBulletDirection === \"p-2-\"){\n            enemyBulletBox[0].x -= bulletSpeed;\n            xEnemyBulletCoordinate = enemyBulletBox[0].x;\n            if(xEnemyBulletCoordinate <= -enemyBulletWidth){\n                enemyBulletBox.pop();\n                shotEnemy = false;\n            }\n        }else if(enemyGunBulletDirection === \"p-3-\"){\n            enemyBulletBox[0].y -= bulletSpeed;\n            yEnemyBulletCoordinate = enemyBulletBox[0].y;\n            if(yEnemyBulletCoordinate < -enemyBulletHeight){\n                enemyBulletBox.pop();\n                shotEnemy = false;\n            }\n        }\n    }\n\n    const checkHit = () => {\n        if((xBulletCoordinate > xEnemyCoordinate && xBulletCoordinate < (xEnemyCoordinate + enemyWidth))\n            && (yBulletCoordinate > yEnemyCoordinate && yBulletCoordinate < (yEnemyCoordinate + enemyHeight))){\n            hit = true;\n            shot = false;\n            bulletBox.pop();\n            soundTankExplosion();\n            if(props.game.enemy === 1){\n                gameResult(\"player\");\n                return true;\n            }\n            setTimeout(function () {\n                destroyed(xCoordinate, yCoordinate, gunDirection, tankHeight, tankWidth,\n                    undefined, undefined, undefined, undefined, undefined);\n            }, 2000);\n            return true;\n        }\n    }\n\n    const checkPlayerHit = () => {\n        if((xEnemyBulletCoordinate > xCoordinate && xEnemyBulletCoordinate < (xCoordinate + tankWidth))\n            && (yEnemyBulletCoordinate > yCoordinate && yEnemyBulletCoordinate < (yCoordinate + tankHeight))){\n            shotEnemy = false;\n            enemyBulletBox.pop();\n            soundTankExplosion();\n            if(props.game.life === 25){\n                gameResult(\"enemy\");\n                return true;\n            }\n\n            damage(xCoordinate, yCoordinate, gunDirection, tankHeight, tankWidth,\n                xEnemyCoordinate, yEnemyCoordinate, enemyGunDirection, enemyHeight, enemyWidth);\n            return true;\n        }\n    }\n\n    const automaticShot = () => {\n        shotEnemy = true;\n        enemyGunBulletDirection = enemyGunDirection;\n        if(enemyGunBulletDirection === \"p-0-\"){\n            if(enemyBulletWidth < enemyBulletHeight){\n                [enemyBulletHeight, enemyBulletWidth] = [enemyBulletWidth, enemyBulletHeight];\n            }\n            xEnemyBulletCoordinate = xEnemyCoordinate + enemyWidth;\n            yEnemyBulletCoordinate = yEnemyCoordinate + (enemyHeight-enemyBulletHeight)/2;\n        }else if(enemyGunBulletDirection === \"p-1-\"){\n            if(enemyBulletWidth > enemyBulletHeight){\n                [enemyBulletHeight, enemyBulletWidth] = [enemyBulletWidth, enemyBulletHeight];\n            }\n            xEnemyBulletCoordinate = xEnemyCoordinate + (enemyWidth-enemyBulletWidth+disadvantage)/2;\n            yEnemyBulletCoordinate = yEnemyCoordinate + enemyHeight;\n        }else if(enemyGunBulletDirection === \"p-2-\"){\n            if(enemyBulletWidth < enemyBulletHeight){\n                [enemyBulletHeight, enemyBulletWidth] = [enemyBulletWidth, enemyBulletHeight];\n            }\n            xEnemyBulletCoordinate = xEnemyCoordinate - enemyBulletWidth;\n            yEnemyBulletCoordinate = yEnemyCoordinate + (enemyHeight-enemyBulletHeight)/2;\n        }else if(enemyGunBulletDirection === \"p-3-\"){\n            if(enemyBulletWidth > enemyBulletHeight){\n                [enemyBulletHeight, enemyBulletWidth] = [enemyBulletWidth, enemyBulletHeight];\n            }\n            xEnemyBulletCoordinate = xEnemyCoordinate + (enemyWidth-enemyBulletWidth-disadvantage)/2;\n            yEnemyBulletCoordinate = yEnemyCoordinate - enemyBulletHeight;\n        }\n        enemyBulletBox.push({\n            x: xEnemyBulletCoordinate,\n            y: yEnemyBulletCoordinate,\n            height: enemyBulletHeight,\n            width: enemyBulletWidth,\n        });\n    }\n\n    const shotSound = () => {\n        return new Audio('./audio/shot-2.mp3').play();\n    }\n\n    const soundTankExplosion = () => {\n        return new Audio('./audio/shot-7.mp3').play();\n    }\n\n    const engineSound = () => {\n        setTimeout(function () {\n            engine = false;\n        }, 102500); // sound duration  102 seconds\n\n        engine = true;\n        return new Audio('./audio/engine-sound-2.mp3').play();\n    }\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        let animationFrameId;\n\n        battlefield = {\n            ...battlefield,\n            main: props.data,\n            map: props.map,\n            tank: props.tank,\n        };\n        // Our draw starts from here\n        const render = () => {\n            draw(context, battlefield);\n            animationFrameId = window.requestAnimationFrame(render);\n        }\n        render();\n        document.addEventListener(\"keydown\", escFunction, false);\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameId);\n            document.removeEventListener(\"keydown\", escFunction, false);\n        }\n    }, [draw]);\n\n    return <canvas ref={canvasRef} {...restProps}/>\n}\n\nexport default Canvas;","import React, {useState} from \"react\";\nimport {connect, useSelector} from \"react-redux\";\nimport {set_game_state} from \"../../store/actions/gameStateAction\";\nimport {change_game_info_data} from \"../../store/actions/gameInfoAction\";\nimport GameInfo from \"./GameInfo\";\nimport WinLose from \"./WinLose\";\nimport Button from '@material-ui/core/Button';\nimport Canvas from \"./Canvas\";\nimport \"./GameArea.scss\";\n\nfunction GameArea(props) {\n    const [finish, setFinish] = useState(false);\n    const [win, setWin] = useState(false);\n    const {gameInfoData, gameStateData: DATA, mapsData, tanksData} = useSelector(state => state);\n\n\n    const endGame = () => {\n        props.changeGameState(0);\n    }\n\n    const gameResult = (type) => {\n        if(type === \"player\"){\n            props.changeGameInfo({\n                ...gameInfoData,\n                enemy: 0,\n            });\n            setWin(type);\n        }else if(type === \"enemy\"){\n            props.changeGameInfo({\n                ...gameInfoData,\n                life: 0,\n            });\n        }\n        setFinish(true);\n    }\n\n    const receivedDamage = (x, y, pos, height, width, eX, eY, ePos, eHeight, eWidth) => {\n        props.changeGameInfo({\n            ...gameInfoData,\n            x, y, pos, height, width, eX, eY, ePos, eHeight, eWidth,\n            life: gameInfoData.life - 25,\n        });\n    }\n\n    const enemyDestroyed = (x, y, pos, height, width, eX, eY, ePos, eHeight, eWidth) => {\n        props.changeGameInfo({\n            ...gameInfoData,\n            x, y, pos, height, width, eX, eY, ePos, eHeight, eWidth,\n            enemy: gameInfoData.enemy - 1,\n        });\n    }\n\n    return (\n        <section className={\"game-area\"}>\n            <div className={\"game-info-block\"}>\n                <GameInfo data={gameInfoData}/>\n            </div>\n            <div className={\"battlefield\"}>\n                { finish ?\n                    <WinLose win={win} data={gameInfoData}/> :\n                    <Canvas width={750} height={700} data={DATA} map={mapsData} tank={tanksData} game={gameInfoData}\n                            destroyed={enemyDestroyed} damage={receivedDamage} gameResult={gameResult}\n                    />\n                }\n            </div>\n            <div className={\"end-game\"}>\n                <Button onClick={() => endGame()} variant=\"contained\" color=\"secondary\">\n                    {finish ? \"Back to the main menu\" : \"End game\"}\n                </Button>\n            </div>\n        </section>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeGameState: (data) => {dispatch(set_game_state(data))},\n        changeGameInfo: (data) => {dispatch(change_game_info_data(data))},\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(GameArea);","import {useSelector} from \"react-redux\";\nimport Menu from \"../menu/Menu\";\nimport GameArea from \"../game/GameArea\";\n\nfunction Main() {\n    const {gameStateData: DATA, gameInfoData: infoData} = useSelector(state => state);\n    const gameMode = DATA.state ? \"game-mode\" : \"\";\n\n    return (\n        <main className={\"container\"}>\n            <div className={`main-area ${gameMode}`}>\n                {!DATA.state ?\n                    <Menu infoData={infoData}/>\n                    :\n                    <GameArea/>\n                }\n            </div>\n        </main>\n    );\n}\n\nexport default Main;","import \"./Footer.scss\";\n\nfunction Footer() {\n    const year = new Date().getFullYear();\n    const linksJSX = [\"Privacy Policy\", \"About us\", \"Support\"]\n        .map((el, i) => <li key={i}><a href=\"/\">{el}</a></li>);\n\n    return (\n        <footer>\n            <div className=\"footer_bottom\">\n                <div className=\"container-fluid\">\n                    <div className=\"copyright_column\">\n                        <ul id=\"menu-copyright\">\n                            {linksJSX}\n                        </ul>\n                        <span>© {year} The Art of Programming</span>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport Footer from './components/footer/Footer';\nimport './scss/main.scss';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Main/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider as ProviderRedux} from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <ProviderRedux store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </ProviderRedux>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}